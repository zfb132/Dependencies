# Compile project on Windows
name: Build Projects on Windows

permissions:
  actions: write
  contents: write

on:
  push:
    paths-ignore:
      - '**.md'
      - '.gitingore'
      - 'CHANGELOG'
    branches:
      - '*'
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-2022
            visual_studio: "C:\\Program Files\\Microsoft Visual Studio\\2022"

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        submodules: 'recursive'

    - name: Set version
      shell: bash
      run: |
        if [[ "${{ github.ref }}" == "refs/tags/"* ]]; then
          export VER_NAME="${{ github.ref_name }}"
        else
          export VER_NAME="$(echo ${{ github.sha }} | cut -c1-7)"
        fi
        echo "VER_NAME=$VER_NAME" >> $GITHUB_ENV

    - name: Build with MSBuild - x86 - Debug
      shell: cmd
      run: |
        call "${{ matrix.visual_studio }}\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86 && ^
        msbuild /m Dependencies.sln -t:restore,build -p:RestorePackagesConfig=true -property:Configuration=Debug -property:Platform=x86 -verbosity:normal

    - name: Build with MSBuild - x86 - Release
      shell: cmd
      run: |
        call "${{ matrix.visual_studio }}\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x86 && ^
        msbuild /m Dependencies.sln -t:restore,build -p:RestorePackagesConfig=true -property:Configuration=Release -property:Platform=x86 -verbosity:normal

    - name: Build with MSBuild - x64 - Debug
      shell: cmd
      run: |
        call "${{ matrix.visual_studio }}\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        msbuild /m Dependencies.sln -t:restore,build -p:RestorePackagesConfig=true -property:Configuration=Debug -property:Platform=x64 -verbosity:normal
  
    - name: Build with MSBuild - x64 - Release
      shell: cmd
      run: |
        call "${{ matrix.visual_studio }}\Enterprise\VC\Auxiliary\Build\vcvarsall.bat" x64 && ^
        msbuild /m Dependencies.sln -t:restore,build -p:RestorePackagesConfig=true -property:Configuration=Release -property:Platform=x64 -verbosity:normal

    - name: Prepare files
      shell: pwsh
      run: |
        .\Deploy-Dependencies.ps1 -Configuration Debug -Platform x86 -Version ${{ env.VER_NAME }}
        .\Deploy-Dependencies.ps1 -Configuration Debug -Platform x64 -Version ${{ env.VER_NAME }}
        .\Deploy-Dependencies.ps1 -Configuration Release -Platform x86 -Version ${{ env.VER_NAME }}
        .\Deploy-Dependencies.ps1 -Configuration Release -Platform x64 -Version ${{ env.VER_NAME }}
        tree ./ /f
        move .\output\* .\

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        # ver_name
        files: |
          Dependencies_${{ env.VER_NAME }}_x86_Debug.zip
          Dependencies_${{ env.VER_NAME }}_x86_Release.zip
          Dependencies_${{ env.VER_NAME }}_x64_Debug.zip
          Dependencies_${{ env.VER_NAME }}_x64_Release.zip
          Dependencies_${{ env.VER_NAME }}_x86_Release_(without peview.exe).zip
          Dependencies_${{ env.VER_NAME }}_x64_Release_(without peview.exe).zip


    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      continue-on-error: true
      with:
        name: dependencies
        if-no-files-found: warn
        retention-days: 3
        path: ./*.zip